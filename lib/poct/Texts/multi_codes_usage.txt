Usage: MultiCodes.pl -out out_prefix -index name -fastq_fp fastqfile
Or, if not yet multiplexed,
       MultiCodes.pl -out out_prefix -primers PrimerIndexTable < fastq
Optional arguments:
    [ -debug ] [ -dntag ] [ -limit maxReads ] [ -minQuality $minQuality ]
    [ -n25 | -bs3 ]
    [ -preseq CAGCGTACG -postseq AGAGACCTC -nPreExpected 9 ]

    -n25 or -bs3 indicate newer multiplexing designs:
    -n25 means 11:14 nt before the pre-sequence, corresponding to a read with
	2:5 Ns, GTCGACCTGCAGCGTACG, N20, AGAGACC
    -bs3 means 1:4 + 6 + 11 = 18:21 nt before the pre-sequence, corresponding to
	1:4 Ns, index2, GTCGACCTGCAGCGTACG, N20, AGAGACC
	where nN and index2 is specified in ../primers/bs2.index2

    nPreExpected can also be a range, i.e. 11:14

    PrimerIndexTable should be tab-delimited with multiplex name and a primer like nACGACG
    The fastq file should be fastq with phred+33 ("sanger") encoding of quality scores
    (as in MiSeq or 2012+ HiSeq)

This script analyzes multiplexed random barcode sequences, such as
nATCACGAG GTCGACCTGCAGCGTACG 20N AGAGACCTCGTGGACATCAGATC
for primer nATCACGAG (nLeading=1, indexseq=ATCACGAG), where the 20 Ns are the barcode

or, if -dntag is specified,
nATCACGAG CGGTGTCGGTCTCGTAG 20N CGATGAATTCGAGCTCGTT

or, if the index is specified, there is no multiplexing, and the read is
nnnnn GTCGACCTGCAGCGTACG 20N AGAGACC (where the leading ns are random and are ignored)

or, if -preseq -postseq -nPreExpected are all used, it expects a read of the form
   nPreExpected characters (any, although this includes the multiplexing tag unless -index is used)
   preseq
   barcode
   postseq

For a barcode to be counted, the preseq (9 nt upstream of the barcode)
much match exactly; the postseq (9 nt downstream of the barcode) much
also be correct unless the sequence is too short (in which 4 or 0 are
checked) or minQuality = 0 (in which case the post-sequence is not
checked and there is no guarantee that the barcode is the correct
length).
